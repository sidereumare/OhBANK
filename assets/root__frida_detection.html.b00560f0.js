import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.d51fb666.js";const p={},e=t(`<h1 id="루팅-우회" tabindex="-1"><a class="header-anchor" href="#루팅-우회" aria-hidden="true">#</a> 루팅 우회</h1><h2 id="_1-루팅이란" tabindex="-1"><a class="header-anchor" href="#_1-루팅이란" aria-hidden="true">#</a> 1. 루팅이란 ?</h2><p>루팅은 쉽게 말해 시스템 최고 권한(root)을 얻는 것이다. 안드로이드에서는 안정적인 기기의 동작을 보장하기 위해 루트 권한은 일반적인 사용자가 접근하지 못하도록 되어 있다. 시스템 내부 저장소 접근, 권한 변경 등 많은 작업을 수행할 수 있기 때문이다. 하지만 Frida를 이용한 후킹을 위해서는 루팅된 시스템이 필요하며, 이때 루팅 탐지 기법이 적용된 애플리케이션은 동작이 어려울 수 있다.</p><h2 id="_2-공격-방법" tabindex="-1"><a class="header-anchor" href="#_2-공격-방법" aria-hidden="true">#</a> 2. 공격 방법</h2><p><img src="https://user-images.githubusercontent.com/53963779/200763026-84f11295-bcab-43c1-a408-72873e56eb49.png" alt="루팅하고 앱 실행" loading="lazy"></p><p>루팅된 폰으로 앱 실행 시 루팅을 탐지하여 앱이 종료된다.</p><p>jadx이용하여 apk 파일을 분석하면</p><p><img src="https://user-images.githubusercontent.com/53963779/200761967-567111da-6d5c-4f45-bc86-69cc4bf98254.png" alt="jadx1" loading="lazy"></p><p><img src="https://user-images.githubusercontent.com/53963779/200762046-1b0a707a-4553-4905-abf9-3b9a2ad503d1.png" alt="jadx2" loading="lazy"></p><p>루팅을 탐지하여 boolean형으로 값을 반환하는 함수를 확인할 수 있다. 후킹을 통해 false를 반환하도록 하면 루팅 탐지를 우회할 수 있다.</p><p>추가로 fridaCheckJNI.java 파일을 확인해보면 frida를 탐지하는 코드를 확인할 수 있다.</p><p>아래의 코드를 이용하여 루팅 탐지를 우회할 수 있다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">##loader.py</span>
<span class="token keyword">import</span> frida
<span class="token keyword">import</span> time

device <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
pid <span class="token operator">=</span> device<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;com.app.damnvulnerablebank&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
device<span class="token punctuation">.</span>resume<span class="token punctuation">(</span>pid<span class="token punctuation">)</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#Without it Java.perform silently fails</span>
session <span class="token operator">=</span> device<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>pid<span class="token punctuation">)</span>
script <span class="token operator">=</span> session<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;frida.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token comment">//frida.js</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Script loaded successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Inside java perform function&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 루팅 우회</span>
    <span class="token keyword">var</span> RootUtil <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.app.damnvulnerablebank.RootUtil&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//RootUtil 파일 사용 선언</span>
    RootUtil<span class="token punctuation">.</span>isDeviceRooted<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;isDeviceRooted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">//리턴값을 false로 하여 우회</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// frida 우회</span>
    <span class="token keyword">var</span> Frida <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.app.damnvulnerablebank.FridaCheckJNI&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//RootUtil 파일 사용 선언</span>
    Frida<span class="token punctuation">.</span>fridaCheck<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Inside fridaCheck&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">//리턴값을 false로 하여 우회</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://user-images.githubusercontent.com/53963779/201001702-42e5cd41-1791-4913-8e0c-cf3ac9c198dd.png" alt="jadx3" loading="lazy"></p><p>위의 코드를 이용하여 루팅 탐지 및 frida 탐지를 우회하면 앱이 정상적으로 실행이 된다.</p><p><img src="https://user-images.githubusercontent.com/53963779/200764618-c8289263-1797-4e7b-896c-ef008df06fc2.png" alt="앱 실행 화면" loading="lazy"></p>`,17),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","root__frida_detection.html.vue"]]);export{r as default};
