import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,b as e,d as a,e as s,f as n,r as d}from"./app.d51fb666.js";const p={},c=n('<h1 id="activity-설정-취약점-android-exported-true" tabindex="-1"><a class="header-anchor" href="#activity-설정-취약점-android-exported-true" aria-hidden="true">#</a> Activity 설정 취약점 (android:exported=&quot;true&quot;)</h1><h2 id="_1-activity-설정-취약점이란" tabindex="-1"><a class="header-anchor" href="#_1-activity-설정-취약점이란" aria-hidden="true">#</a> 1. Activity 설정 취약점이란?</h2><p>안드로이드 앱에서 볼 수 있는 모든 것은 Activity를 통해 이루어집니다. 예를 들어, 주어진 응용 프로그램에서 로그인 화면, 시작 화면 등 모든 것이 Activity입니다. Activity 설정 취약점은 안드로이드 앱의 Androidmanifest.xml 파일에서 android:exported=&quot;true&quot;로 설정되어 있는 컴포넌트는 외부에서 해당 컴포넌트에 인텐트를 전달하여 활성화 시킬 수 있습니다. 이 경우, 해당 컴포넌트가 원래 의도하지 않았던 상황에서 실행이 가능하게 되므로 시스템 보안 침해 가능성이 생기게 됩니다.</p><h2 id="_2-공격-방법" tabindex="-1"><a class="header-anchor" href="#_2-공격-방법" aria-hidden="true">#</a> 2. 공격 방법</h2>',4),l={href:"https://github.com/skylot/jadx/releases/latest",target:"_blank",rel:"noopener noreferrer"},u=n(`<p><img src="https://user-images.githubusercontent.com/114275157/200762512-e101c8b1-b5fd-4102-b744-e7408296c410.png" alt="AndroidManifest.xml 내의 android:exported" loading="lazy"></p><p>위의 사진에서 android:exported=&quot;true&quot; 가 있는 activity는 2개인 것을 확인할 수 있습니다.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">&quot;com.app.damnvulnerablebank.SendMoney&quot;</span> <span class="token literal-property property">android</span><span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">&quot;com.app.damnvulnerablebank.ViewBalance&quot;</span> <span class="token literal-property property">android</span><span class="token operator">:</span>exported<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),m={href:"https://labs.brandi.co.kr/2018/08/10/kimcy.html",target:"_blank",rel:"noopener noreferrer"},h=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adb shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>그리고, 접속에 성공한 경우에는 아래의 명령어를 이용하여, activity를 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start <span class="token parameter variable">-n</span> <span class="token punctuation">[</span>앱 패키지명<span class="token punctuation">]</span>/<span class="token punctuation">[</span>앱 activity 이름<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>위의 명령어를 사용한 예시입니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>am start <span class="token parameter variable">-n</span> com.app.damnvulnerablebank/com.app.damnvulnerablebank.SendMoney
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://user-images.githubusercontent.com/114275157/200765301-8c9ea6af-4d7e-4d3f-a2a5-33b7022de2aa.png" alt="13" loading="lazy"></p><p>예시 문장을 이용하여 실행했을 시에 activity가 실행되는 모습을 확인할 수 있습니다.</p><p><img src="https://user-images.githubusercontent.com/114275157/200770697-0b39e913-d2e5-4464-ad47-2b308ebc3c00.png" alt="14" loading="lazy"></p>`,8);function v(b,g){const t=d("ExternalLinkIcon");return o(),i("div",null,[c,e("p",null,[e("a",l,[a("jadx-gui"),s(t)]),a(" 를 이용하여 대상 안드로이드 앱을 열어 앱 내의 AndroidManifest.xml 파일을 확인합니다.")]),u,e("p",null,[a('AndroidManifest.xml에서 android:exported="true"가 있는 activity가 있는 경우, Android Debug Bridge (ADB) Shell을 이용하여 대상 단말기에 접속합니다. 만일, 아래의 명령어가 작동하지 않을 경우 환경 구성을 위해 '),e("a",m,[a("이 게시글"),s(t)]),a("을 참고하여 진행해주시기 바랍니다.")]),h])}const x=r(p,[["render",v],["__file","file_and_export.html.vue"]]);export{x as default};
