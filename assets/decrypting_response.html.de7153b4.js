import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as t,a as p,f as n}from"./app.d51fb666.js";const o={},e=n('<h1 id="요청값-및-응답값-암복호화" tabindex="-1"><a class="header-anchor" href="#요청값-및-응답값-암복호화" aria-hidden="true">#</a> 요청값 및 응답값 암복호화</h1><h2 id="_1-암호화란" tabindex="-1"><a class="header-anchor" href="#_1-암호화란" aria-hidden="true">#</a> 1. 암호화란?</h2><p>암호화 또는 인크립션은 특별한 지식을 소유한 사람들을 제외하고는 누구든지 읽어볼 수 없도록 알고리즘을 이용하여 정보를 전달하는 과정이다. 이러한 과정을 통해 암호화된 정보를 낳는다. 이에 역행하는 과정을 해독 또는 디크립션이라고 하며 이로써 암호화된 정보를 다시 읽을 수 있다.</p><h2 id="_2-공격-방법" tabindex="-1"><a class="header-anchor" href="#_2-공격-방법" aria-hidden="true">#</a> 2. 공격 방법</h2><p><img src="https://user-images.githubusercontent.com/53963779/200760339-236b07b9-0b5e-4595-b774-c542494241ba.png" alt="qna게시판" loading="lazy"></p><p>Burp Suite에서 인터셉트 기능을 켠 상태에서 “Qna 게시판”의 임의의 게시글을 확인해 봄</p><p><img src="https://user-images.githubusercontent.com/53963779/200765947-f73bb9d0-4311-4e87-b230-2ff2262616f4.png" alt="qna게시판-burpsuite" loading="lazy"></p>',7),c=n(`<h4 id="요청값과-응답값이-암호화된걸-확인" tabindex="-1"><a class="header-anchor" href="#요청값과-응답값이-암호화된걸-확인" aria-hidden="true">#</a> 요청값과 응답값이 암호화된걸 확인.</h4><h4 id="jadx를-통해-소스를-분석하던-중-encryptdecrypt-라는-암호화와-관련이-있어-보이는-클래스-확인" tabindex="-1"><a class="header-anchor" href="#jadx를-통해-소스를-분석하던-중-encryptdecrypt-라는-암호화와-관련이-있어-보이는-클래스-확인" aria-hidden="true">#</a> jadx를 통해 소스를 분석하던 중 “EncryptDecrypt”라는 암호화와 관련이 있어 보이는 클래스 확인.</h4><p><img src="https://user-images.githubusercontent.com/53963779/200766723-a6a09d62-1ff1-458e-8619-be920ef15362.png" alt="jadx" loading="lazy"></p><p>아래와 같이 위 클래스를 js코드로 컨버팅(converting)함</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Script loaded successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Inside java perform function&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 루팅 우회</span>
    <span class="token keyword">var</span> RootUtil <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.app.damnvulnerablebank.RootUtil&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    RootUtil<span class="token punctuation">.</span>isDeviceRooted<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;isDeviceRooted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// frida 우회</span>
    <span class="token keyword">var</span> Frida <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.app.damnvulnerablebank.FridaCheckJNI&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Frida<span class="token punctuation">.</span>fridaCheck<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Inside fridaCheck&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> Encrypt <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.app.damnvulnerablebank.EncryptDecrypt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 암호화 전 문자열 출력</span>
    Encrypt<span class="token punctuation">.</span>encrypt<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;encrypt : &#39;</span><span class="token operator">+</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 복호화 후 문자열 출력</span>
    Encrypt<span class="token punctuation">.</span>decrypt<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> Encrypt<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;decrypt : &#39;</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// request url 출력</span>
    <span class="token keyword">var</span> request <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.volley.toolbox.JsonObjectRequest&quot;</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;org.json.JSONObject&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;com.android.volley.Response$Listener&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;com.android.volley.Response$ErrorListener&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> jsonRequest<span class="token punctuation">,</span> listener<span class="token punctuation">,</span> errorListener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;request : &#39;</span><span class="token operator">+</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$init</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> jsonRequest<span class="token punctuation">,</span> listener<span class="token punctuation">,</span> errorListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// retry policy 강제 수정</span>
    <span class="token comment">// retry 수 1회로 제한, timeout 무제한</span>
    <span class="token comment">// volly 라이브러리의 JsonObjectRequest에서 retry policy를 관리하는 객체를 생성하는 부분에서</span>
    <span class="token comment">// 강제로 주입하는 방식으로 우회</span>
    <span class="token keyword">var</span> retryPolicy <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.volley.DefaultRetryPolicy&quot;</span><span class="token punctuation">)</span>
    retryPolicy<span class="token punctuation">.</span>$init<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;float&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">initialTimeoutMs<span class="token punctuation">,</span> maxNumRetries<span class="token punctuation">,</span> backoffMultiplier</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        maxNumRetries <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        initialTimeoutMs <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;retryPolicy : &#39;</span><span class="token operator">+</span>initialTimeoutMs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;retryPolicy : &#39;</span><span class="token operator">+</span>maxNumRetries<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;retryPolicy : &#39;</span><span class="token operator">+</span>backoffMultiplier<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$init</span><span class="token punctuation">(</span>initialTimeoutMs<span class="token punctuation">,</span> maxNumRetries<span class="token punctuation">,</span> backoffMultiplier<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// System.loadLibrary()를 통해 라이브러리를 로드하는 부분에서 후킹</span>
    <span class="token keyword">var</span> System <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.System&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>loadLibrary<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;System.load : &#39;</span><span class="token operator">+</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://user-images.githubusercontent.com/53963779/200767028-35929f01-0f27-42e2-8042-faae3e986a96.png" alt="복호화된 값 확인" loading="lazy"> 복호화된 값 확인.</p><p><img src="https://user-images.githubusercontent.com/53963779/200767115-29e51579-0c37-4293-b925-e99f564212be.png" alt="qna bupr 값 수정" loading="lazy"></p><p>Qna 게시판에서 게시글을 클릭할 때 Burp Suite를 통해 값을 수정하여 다른 사용자의 게시글을 확인 가능함.</p><p><img src="https://user-images.githubusercontent.com/53963779/200767272-44fef888-4f04-4f1b-a0cf-1bb39952568a.png" alt="다른 사용자 qna 확인" loading="lazy"></p>`,9);function i(u,l){return a(),t("div",null,[e,p("#하드코딩 목차 이동"),c])}const d=s(o,[["render",i],["__file","decrypting_response.html.vue"]]);export{d as default};
